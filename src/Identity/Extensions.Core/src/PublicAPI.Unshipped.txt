#nullable enable
const Microsoft.AspNetCore.Identity.TokenClaims.Audience = "aud" -> string!
const Microsoft.AspNetCore.Identity.TokenClaims.Expires = "exp" -> string!
const Microsoft.AspNetCore.Identity.TokenClaims.IssuedAt = "iat" -> string!
const Microsoft.AspNetCore.Identity.TokenClaims.Issuer = "iss" -> string!
const Microsoft.AspNetCore.Identity.TokenClaims.Jti = "jti" -> string!
const Microsoft.AspNetCore.Identity.TokenClaims.NotBefore = "nbf" -> string!
const Microsoft.AspNetCore.Identity.TokenClaims.Subject = "sub" -> string!
const Microsoft.AspNetCore.Identity.TokenFormat.Code = "code" -> string!
const Microsoft.AspNetCore.Identity.TokenFormat.JWT = "jwt" -> string!
const Microsoft.AspNetCore.Identity.TokenPurpose.AccessToken = "access_token" -> string!
const Microsoft.AspNetCore.Identity.TokenPurpose.RefreshToken = "refresh_token" -> string!
const Microsoft.AspNetCore.Identity.TokenStatus.Active = "active" -> string!
const Microsoft.AspNetCore.Identity.TokenStatus.Inactive = "inactive" -> string!
const Microsoft.AspNetCore.Identity.TokenStatus.Revoked = "revoked" -> string!
Microsoft.AspNetCore.Identity.IdentityBearerTokenBuilder
Microsoft.AspNetCore.Identity.IdentityBearerTokenBuilder.IdentityBearerTokenBuilder(Microsoft.AspNetCore.Identity.IdentityBuilder! builder, System.Type! tokenType) -> void
Microsoft.AspNetCore.Identity.IdentityBearerTokenBuilder.IdentityBuilder.get -> Microsoft.AspNetCore.Identity.IdentityBuilder!
Microsoft.AspNetCore.Identity.IdentityBuilder.TokenType.get -> System.Type?
Microsoft.AspNetCore.Identity.IdentityOptions.TokenManager.get -> Microsoft.AspNetCore.Identity.TokenManagerOptions!
Microsoft.AspNetCore.Identity.IdentityOptions.TokenManager.set -> void
Microsoft.AspNetCore.Identity.IdentityVersions
Microsoft.AspNetCore.Identity.IKeyStore
Microsoft.AspNetCore.Identity.IKeyStore.AddAsync(string! keyId, string! providerId, string! format, string! data, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Identity.IdentityResult!>!
Microsoft.AspNetCore.Identity.IKeyStore.FindByIdAsync(string! keyId, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Identity.KeyInfo?>!
Microsoft.AspNetCore.Identity.IKeyStore.RemoveAsync(string! keyId, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Identity.IdentityResult!>!
Microsoft.AspNetCore.Identity.ITokenFormatProvider
Microsoft.AspNetCore.Identity.ITokenFormatProvider.CreateTokenAsync(Microsoft.AspNetCore.Identity.TokenInfo! token) -> System.Threading.Tasks.Task<string!>!
Microsoft.AspNetCore.Identity.ITokenFormatProvider.PayloadSerializer.get -> Microsoft.AspNetCore.Identity.ITokenSerializer!
Microsoft.AspNetCore.Identity.ITokenFormatProvider.ReadTokenAsync(string! token, string! purpose) -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Identity.TokenInfo?>!
Microsoft.AspNetCore.Identity.ITokenSerializer
Microsoft.AspNetCore.Identity.ITokenSerializer.Deserialize<T>(string? serializedValue) -> T?
Microsoft.AspNetCore.Identity.ITokenSerializer.Serialize<T>(T value) -> string!
Microsoft.AspNetCore.Identity.ITokenStore<TToken>
Microsoft.AspNetCore.Identity.ITokenStore<TToken>.CreateAsync(TToken! token, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Identity.IdentityResult!>!
Microsoft.AspNetCore.Identity.ITokenStore<TToken>.DeleteAsync(TToken! token, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Identity.IdentityResult!>!
Microsoft.AspNetCore.Identity.ITokenStore<TToken>.FindAsync(Microsoft.AspNetCore.Identity.TokenInfoFilter! filter, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<string!>!>!
Microsoft.AspNetCore.Identity.ITokenStore<TToken>.FindAsync(string! purpose, string! value, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<TToken?>!
Microsoft.AspNetCore.Identity.ITokenStore<TToken>.FindByIdAsync(string! tokenId, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<TToken?>!
Microsoft.AspNetCore.Identity.ITokenStore<TToken>.GetExpirationAsync(TToken! token, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.DateTimeOffset>!
Microsoft.AspNetCore.Identity.ITokenStore<TToken>.GetFormatAsync(TToken! token, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<string!>!
Microsoft.AspNetCore.Identity.ITokenStore<TToken>.GetStatusAsync(TToken! token, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<string!>!
Microsoft.AspNetCore.Identity.ITokenStore<TToken>.GetSubjectAsync(TToken! token, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<string!>!
Microsoft.AspNetCore.Identity.ITokenStore<TToken>.GetTokenInfoAsync<TPayload>(TToken! token, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Identity.TokenInfo!>!
Microsoft.AspNetCore.Identity.ITokenStore<TToken>.NewAsync(Microsoft.AspNetCore.Identity.TokenInfo! tokenInfo, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<TToken!>!
Microsoft.AspNetCore.Identity.ITokenStore<TToken>.PurgeExpiredAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<int>!
Microsoft.AspNetCore.Identity.ITokenStore<TToken>.SetExpirationAsync(TToken! token, System.DateTimeOffset expiration, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Identity.ITokenStore<TToken>.SetFormatAsync(TToken! token, string! format, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Identity.ITokenStore<TToken>.SetStatusAsync(TToken! token, string! status, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Identity.ITokenStore<TToken>.SetSubjectAsync(TToken! token, string! subject, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Identity.ITokenStore<TToken>.UpdateAsync(TToken! token, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Identity.IdentityResult!>!
Microsoft.AspNetCore.Identity.KeyInfo
Microsoft.AspNetCore.Identity.KeyInfo.Created.get -> System.DateTimeOffset
Microsoft.AspNetCore.Identity.KeyInfo.Created.set -> void
Microsoft.AspNetCore.Identity.KeyInfo.Data.get -> string!
Microsoft.AspNetCore.Identity.KeyInfo.Data.set -> void
Microsoft.AspNetCore.Identity.KeyInfo.Format.get -> string!
Microsoft.AspNetCore.Identity.KeyInfo.Format.set -> void
Microsoft.AspNetCore.Identity.KeyInfo.Id.get -> string!
Microsoft.AspNetCore.Identity.KeyInfo.Id.set -> void
Microsoft.AspNetCore.Identity.KeyInfo.KeyInfo() -> void
Microsoft.AspNetCore.Identity.KeyInfo.ProviderId.get -> string!
Microsoft.AspNetCore.Identity.KeyInfo.ProviderId.set -> void
Microsoft.AspNetCore.Identity.StoreOptions.SchemaVersion.get -> System.Version!
Microsoft.AspNetCore.Identity.StoreOptions.SchemaVersion.set -> void
Microsoft.AspNetCore.Identity.TokenBuilder
Microsoft.AspNetCore.Identity.TokenBuilder.Created.get -> System.DateTimeOffset?
Microsoft.AspNetCore.Identity.TokenBuilder.Created.set -> void
Microsoft.AspNetCore.Identity.TokenBuilder.Expires.get -> System.DateTimeOffset
Microsoft.AspNetCore.Identity.TokenBuilder.Expires.set -> void
Microsoft.AspNetCore.Identity.TokenBuilder.RawToken.get -> System.Collections.Generic.IDictionary<string!, string!>!
Microsoft.AspNetCore.Identity.TokenBuilder.RawToken.set -> void
Microsoft.AspNetCore.Identity.TokenBuilder.Subject.get -> string!
Microsoft.AspNetCore.Identity.TokenBuilder.Subject.set -> void
Microsoft.AspNetCore.Identity.TokenBuilder.TokenBuilder(string! subject, System.DateTimeOffset expires, System.Collections.Generic.IDictionary<string!, string!>? data = null) -> void
Microsoft.AspNetCore.Identity.TokenClaims
Microsoft.AspNetCore.Identity.TokenFormat
Microsoft.AspNetCore.Identity.TokenInfo
Microsoft.AspNetCore.Identity.TokenInfo.Created.get -> System.DateTimeOffset?
Microsoft.AspNetCore.Identity.TokenInfo.Created.set -> void
Microsoft.AspNetCore.Identity.TokenInfo.Expiration.get -> System.DateTimeOffset?
Microsoft.AspNetCore.Identity.TokenInfo.Expiration.set -> void
Microsoft.AspNetCore.Identity.TokenInfo.Format.get -> string!
Microsoft.AspNetCore.Identity.TokenInfo.Format.set -> void
Microsoft.AspNetCore.Identity.TokenInfo.Id.get -> string!
Microsoft.AspNetCore.Identity.TokenInfo.Id.set -> void
Microsoft.AspNetCore.Identity.TokenInfo.Payload.get -> object?
Microsoft.AspNetCore.Identity.TokenInfo.Payload.set -> void
Microsoft.AspNetCore.Identity.TokenInfo.Purpose.get -> string!
Microsoft.AspNetCore.Identity.TokenInfo.Purpose.set -> void
Microsoft.AspNetCore.Identity.TokenInfo.Status.get -> string!
Microsoft.AspNetCore.Identity.TokenInfo.Status.set -> void
Microsoft.AspNetCore.Identity.TokenInfo.Subject.get -> string!
Microsoft.AspNetCore.Identity.TokenInfo.Subject.set -> void
Microsoft.AspNetCore.Identity.TokenInfo.TokenInfo(string! id, string! format, string! subject, string! purpose, string! status) -> void
Microsoft.AspNetCore.Identity.TokenInfoFilter
Microsoft.AspNetCore.Identity.TokenInfoFilter.Format.get -> string?
Microsoft.AspNetCore.Identity.TokenInfoFilter.Format.set -> void
Microsoft.AspNetCore.Identity.TokenInfoFilter.Id.get -> string?
Microsoft.AspNetCore.Identity.TokenInfoFilter.Id.set -> void
Microsoft.AspNetCore.Identity.TokenInfoFilter.Purpose.get -> string?
Microsoft.AspNetCore.Identity.TokenInfoFilter.Purpose.set -> void
Microsoft.AspNetCore.Identity.TokenInfoFilter.Status.get -> string?
Microsoft.AspNetCore.Identity.TokenInfoFilter.Status.set -> void
Microsoft.AspNetCore.Identity.TokenInfoFilter.Subject.get -> string?
Microsoft.AspNetCore.Identity.TokenInfoFilter.Subject.set -> void
Microsoft.AspNetCore.Identity.TokenInfoFilter.TokenInfoFilter() -> void
Microsoft.AspNetCore.Identity.TokenManagerOptions
Microsoft.AspNetCore.Identity.TokenManagerOptions.FormatProviderMap.get -> System.Collections.Generic.IDictionary<string!, Microsoft.AspNetCore.Identity.ITokenFormatProvider!>!
Microsoft.AspNetCore.Identity.TokenManagerOptions.FormatProviderMap.set -> void
Microsoft.AspNetCore.Identity.TokenManagerOptions.PurposeFormatMap.get -> System.Collections.Generic.IDictionary<string!, string!>!
Microsoft.AspNetCore.Identity.TokenManagerOptions.PurposeFormatMap.set -> void
Microsoft.AspNetCore.Identity.TokenManagerOptions.StoreAccessTokens.get -> bool
Microsoft.AspNetCore.Identity.TokenManagerOptions.StoreAccessTokens.set -> void
Microsoft.AspNetCore.Identity.TokenManagerOptions.TokenManagerOptions() -> void
Microsoft.AspNetCore.Identity.TokenPurpose
Microsoft.AspNetCore.Identity.TokenStatus
static readonly Microsoft.AspNetCore.Identity.IdentityVersions.Version1 -> System.Version!
static readonly Microsoft.AspNetCore.Identity.IdentityVersions.Version2 -> System.Version!
virtual Microsoft.AspNetCore.Identity.IdentityBearerTokenBuilder.TokenType.get -> System.Type!
